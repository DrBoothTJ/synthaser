{"version":3,"sources":["components/domains/CDD.jsx","components/domains/Item.jsx","components/domains/List.jsx","components/rules/filter/Item.jsx","components/rules/filter/List.jsx","components/rules/rename/Item.jsx","components/rules/rename/List.jsx","components/rules/Item.jsx","components/rules/List.jsx","components/Tree.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["CDD","Object","values","dataJSON","promiseOptions","inputValue","length","Promise","resolve","setTimeout","filter","d","accession","toLowerCase","includes","name","map","r","label","value","filterDomains","DomainItem","props","domains","type","onClick","handleRemove","className","htmlFor","id","placeholder","data","onChange","handleChange","required","isMulti","defaultValue","loadOptions","target","DomainList","handleAdd","domain","index","uuid","uuidv4","FilterItem","find","typeOptions","rule","domainOptions","options","event","o","FilterList","filters","RenameItem","from","e","after","a","to","RenameList","renames","rename","RuleItem","handleUpdateRule","ruleOptions","rules","evaluator","parent","idx","_","_idx","events","forEach","RuleList","RuleTree","children","nest","key","Form","useState","state","setState","updateList","newData","obj","handleObjectChange","handleChangeDomain","handleChangeRule","replacer","blob","filename","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","text","Blob","makeBlob","JSON","stringify","file","files","reader","FileReader","readAsText","onload","parse","result","onerror","console","log","error","dIndex","rIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c51690c7.chunk.js","sourcesContent":["import dataJSON from './cdd.json'\n\nexport const CDD = Object.values(dataJSON)\n\nexport const filterDomains = inputValue => {\n  return CDD.filter(\n    d => d.accession.toLowerCase().includes(inputValue.toLowerCase())\n    || d.name.toLowerCase().includes(inputValue.toLowerCase())\n  ).map(r => {\n    r.label = `${r.name} [${r.accession}]`\n    r.value = r.name\n    return r\n  })\n}\n\nexport const promiseOptions = inputValue => {\n  if (inputValue.length < 3) return\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(filterDomains(inputValue))\n    }, 1000)\n  })\n}\n","import { promiseOptions } from './CDD'\nimport AsyncSelect from 'react-select/async'\n\nexport const DomainItem = props => {\n\n  // Mock up event since Select components do not\n  // use event.target.value\n  const onChange = domains => props.handleChange({\n    target: {\n      name: \"domains\",\n      value: domains\n    }\n  })\n\n  const defaultValues = domains => {\n    if (!(domains && domains.length > 0))\n      return null\n    return domains.map(d => ({\n      label: `${d.name} [${d.accession}]`,\n      value: d.accession\n    }))\n  }\n\n  return (\n    <li>\n      <button\n        type=\"button\"\n        onClick={props.handleRemove}\n      >\n        Delete\n      </button>\n      <div className=\"rule-field\">\n        <label htmlFor=\"domain-type\">Type:</label>\n        <input\n          id=\"domain-type\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Domain type...\"\n          value={props.data.name}\n          onChange={props.handleChange}\n          required\n        />\n      </div>\n      <div className=\"rule-field\">\n        <label htmlFor=\"domain-families\">Families:</label>\n        <AsyncSelect\n          id=\"domain-families\"\n          className=\"select\"\n          isMulti\n          defaultValue={defaultValues(props.data.domains)}\n          loadOptions={promiseOptions}\n          onChange={onChange}\n        />\n      </div>\n    </li>\n  )\n}\n","import { DomainItem } from './Item'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport const DomainList = props => (\n  <div>\n    <div>\n      <button type=\"button\" onClick={props.handleAdd}>Add</button>\n    </div>\n    <ul>\n      {props.domains.map((domain, index) => {\n        if (!domain.uuid)\n          domain.uuid = uuidv4()\n        return (\n          <DomainItem\n            key={domain.uuid}\n            data={domain}\n            handleRemove={props.handleRemove(index)}\n            handleChange={props.handleChange(index)}\n          />\n        )\n      })}\n    </ul>\n  </div>\n)\n","import Select from 'react-select'\n\n/**\n * A domain family filter item in a FilterList component.\n *\n * Props:\n *  @prop data {Object} - object containing data for a rule filter\n *  @prop rule {Object} - the parent rule object\n *  @prop domains {Array} - array of all domains\n *  @prop handleChange {Function} - fn for updating filter in rule\n *  @prop handleRemove {Function} - fn for removing filter from rule\n */\nexport const FilterItem = props => {\n  // Get the domain object corresponding to the selected type, if exists\n  const domain = props.domains.find(d => d.name === props.data.type)\n\n  // Generate type options based on domains in the rule\n  const typeOptions = props.rule.domains.map(d => ({ label: d, value: d }))\n\n  // Generate domain family options based on families in the selected type\n  const domainOptions = domain\n    ? domain.domains.map(d => ({ label: d.name, value: d.accession }))\n    : []\n\n  const handleChangeName = event => {\n    props.handleChange([\n      { target: { name: \"domains\", value: [] } },\n      { target: { name: \"type\", value: event.value } },\n    ])\n  }\n  const handleChangeDomains = event => {\n    props.handleChange([\n      { target: { name: \"domains\", value: event ? event.map(d => d.value) : [] } }\n    ])\n  }\n\n  return (\n    <li>\n      <button\n        type=\"button\"\n        onClick={props.handleRemove}\n      >\n        Delete\n      </button>\n\n      <div className=\"rule-field\">\n        <label htmlFor=\"filterName\">Domain name:</label>\n        <Select\n          className=\"select\"\n          options={typeOptions}\n          onChange={handleChangeName}\n          value={domain ? {label: domain.name, value: domain.name} : null}\n        />\n      </div>\n\n      <div className=\"rule-field\">\n        <label htmlFor=\"filterDomains\">Domain types:</label>\n        <Select\n          className=\"select\"\n          options={domainOptions}\n          onChange={handleChangeDomains}\n          value={props.data.domains.map(d => domainOptions.find(o => o.name === d.name))}\n          isMulti\n        />\n      </div>\n    </li>\n  )\n}\n","import { FilterItem } from './Item'\n\nexport const FilterList = props => (\n  <div>\n    <div>\n      <button type=\"button\" onClick={props.handleAdd}>Add</button>\n    </div>\n    <ul>\n      {props.filters.map((filter, index) => (\n        <FilterItem\n          key={filter.uuid}\n          data={filter}\n          rule={props.rule}\n          domains={props.domains}\n          handleChange={props.handleChange(index)}\n          handleRemove={props.handleRemove(index)}\n        />\n      ))}\n    </ul>\n  </div>\n)\n","import Select from 'react-select'\n\nexport const RenameItem = props => {\n\n  // Get from domain options based on domains in the rule\n  const options = props.rule.domains.map(d => ({ label: d, value: d }))\n\n  const handleChangeFrom = event => {\n    props.handleChange({\n      target: { name: \"from\", value: event.value }\n    })\n  }\n  const handleChangeAfter = event => {\n    props.handleChange({\n      target: { name: \"after\", value: event ? event.map(e => e.value) : [] }\n    })\n  }\n\n  return (\n    <li>\n      <button\n        type=\"button\"\n        onClick={props.handleRemove}\n      >\n        Delete\n      </button>\n\n      {/* Change this domain name */}\n      <div className=\"rule-field\">\n        <label htmlFor=\"renameName\">From:</label>\n        <Select\n          id=\"renameName\"\n          className=\"select\"\n          onChange={handleChangeFrom}\n          options={options}\n          value={options.find(o => o.label === props.data.from)}\n        />\n      </div>\n\n      {/* Change domain name when occuring after these domains */}\n      <div className=\"rule-field\">\n        <label htmlFor=\"renameAfter\">After domains:</label>\n        <Select\n          id=\"renameAfter\"\n          className=\"select\"\n          options={options}\n          onChange={handleChangeAfter}\n          value={props.data.after.map(a => options.find(o => o.label === a))}\n          isMulti\n        />\n      </div>\n\n      {/* Change domain name to this value */}\n      <div className=\"rule-field\">\n        <label htmlFor=\"filterTo\">To:</label>\n        <input\n          id=\"filterTo\"\n          type=\"text\"\n          name=\"to\"\n          value={props.data.to}\n          onChange={props.handleChange}\n        />\n      </div>\n    </li>\n  )\n}\n","import { RenameItem } from './Item'\n\nexport const RenameList = props => (\n  <div>\n    <div>\n      <button type=\"button\" onClick={props.handleAdd}>Add</button>\n    </div>\n    <ul>\n      {props.renames.map((rename, index) => (\n        <RenameItem\n          key={rename.uuid}\n          data={rename}\n          rule={props.rule}\n          domains={props.domains}\n          handleChange={props.handleChange(index)}\n          handleRemove={props.handleRemove(index)}\n        />\n      ))}\n    </ul>\n  </div>\n)\n","import Select from 'react-select'\n\nimport { FilterList } from './filter/List'\nimport { RenameList } from './rename/List'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nexport const RuleItem = props => {\n\n  const handleUpdateRule = (label, value) => {\n    props.handleChange({\n      target: { name: label, value : value }\n    })\n  }\n\n  const handleAddFilter = () => {\n    handleUpdateRule(\n      \"filters\",\n      [{ uuid: uuidv4(), type: \"\", domains: [] }, ...props.data.filters]\n    )\n  }\n  const handleChangeFilter = idx => events => {\n    handleUpdateRule(\n      \"filters\",\n      props.data.filters.map((filter, _idx) => {\n        if (_idx !== idx) return filter\n        const data = { ...filter }\n        events.forEach(event => {\n          data[event.target.name] = event.target.value\n        })\n        return data\n      })\n    )\n  }\n  const handleRemoveFilter = idx => () => {\n    handleUpdateRule(\n      \"filters\",\n      props.data.filters.filter((_, _idx) => _idx !== idx)\n    )\n  }\n\n  const handleAddRename = () => {\n    handleUpdateRule(\n      \"renames\",\n      [{ uuid: uuidv4(), \"from\": \"\", \"after\": [], \"to\": \"\" }, ...props.data.renames]\n    )\n  }\n  const handleChangeRename = idx => event => {\n    handleUpdateRule(\n      \"renames\",\n      props.data.renames.map((rename, _idx) => {\n        if (_idx !== idx) return rename\n        return { ...rename, [event.target.name]: event.target.value}\n      })\n    )\n  }\n  const handleRemoveRename = idx => () => {\n    handleUpdateRule(\n      \"renames\",\n      props.data.renames.filter((_, _idx) => _idx !== idx)\n    )\n  }\n\n  const domainOptions = props.domains.map(domain => ({\n    label: domain.name,\n    value: domain.name\n  }))\n  const handleChangeDomains = event => props.handleChange({\n    target: {\n      name: \"domains\",\n      value: event ? event.map(e => e.value) : []\n    }\n  })\n\n  const ruleOptions = props.rules\n    .filter(rule => rule.uuid !== props.data.uuid)\n    .map(rule => ({ label: rule.name, value: rule.uuid }))\n  const handleChangeParent = event => props.handleChange({\n    target: { name: \"parent\", value: event.value }\n  })\n\n  return (\n    <li>\n      <button\n        type=\"button\"\n        onClick={props.handleRemove}\n      >\n        Delete\n      </button>\n      <div className=\"rule-field\">\n        <label htmlFor=\"ruleName\">Name:</label>\n        <input\n          id=\"ruleName\"\n          type=\"text\"\n          name=\"name\"\n          value={props.data.name}\n          onChange={props.handleChange}\n        />\n      </div>\n\n      <div className=\"rule-field\">\n        <label htmlFor=\"ruleDomains\">Domains:</label>\n        <Select\n          name=\"domains\"\n          options={domainOptions}\n          onChange={handleChangeDomains}\n          className=\"select\"\n          value={props.data.domains.map(d => domainOptions.find(o => o.label === d))}\n          isMulti\n        />\n      </div>\n      \n      <div className=\"rule-field\">\n        <label htmlFor=\"ruleEvaluator\">Evaluation expression:</label>\n        <input\n          id=\"ruleEvaluator\"\n          type=\"text\"\n          name=\"evaluator\"\n          value={props.data.evaluator}\n          onChange={props.handleChange}\n        />\n      </div>\n\n      <div className=\"rule-field\">\n        <label htmlFor=\"ruleParent\">Parent rule:</label>\n        <Select\n          id=\"ruleParent\"\n          name=\"parent\"\n          className=\"select\"\n          options={ruleOptions}\n          onChange={handleChangeParent}\n          value={ruleOptions.find(o => o.label === props.data.parent)}\n        />\n      </div>\n\n      <label htmlFor=\"ruleFilters\">Domain filters:</label>\n      <FilterList\n        id=\"ruleFilters\"\n        rule={props.data}\n        filters={props.data.filters}\n        domains={props.domains}\n        handleAdd={handleAddFilter}\n        handleRemove={handleRemoveFilter}\n        handleChange={handleChangeFilter}\n      />\n\n      <label htmlFor=\"ruleRename\">Rename domains:</label>\n      <RenameList\n        id=\"ruleRename\"\n        rule={props.data}\n        renames={props.data.renames}\n        domains={props.domains}\n        handleAdd={handleAddRename}\n        handleRemove={handleRemoveRename}\n        handleChange={handleChangeRename}\n      />\n    </li>\n  )\n}\n","import { RuleItem } from './Item'\n\nexport const RuleList = props => (\n  <div>\n    <div>\n      <button type=\"button\" onClick={props.handleAdd}>Add</button>\n    </div>\n    <ul>\n      {props.rules.map((rule, index) => (\n        <RuleItem\n          key={rule.uuid}\n          data={rule}\n          domains={props.domains}\n          rules={props.rules}\n          handleRemove={props.handleRemove(index)}\n          handleChange={props.handleChange(index)}\n        />\n      ))}\n    </ul>\n  </div>\n)\n","export const RuleTree = props => {\n  return (\n    <ul>\n      {props.rules.map(rule => {\n        if (!rule.children)\n          return (<li key={rule.uuid}>{rule.name}</li>)\n        return (<li key={rule.uuid}>{rule.name}<RuleTree rules={rule.children}/></li>)\n      })}\n    </ul>\n  )\n}\n","import { useState } from 'react'\nimport { DomainList } from './domains/List'\nimport { RuleList } from './rules/List'\nimport { RuleTree } from './Tree'\nimport { v4 as uuidv4 } from 'uuid'\n\n\nconst nest = (rules, uuid = null) => rules\n  .filter(rule => rule.parent === uuid)\n  .map(rule => ({\n    ...rule,\n    key: rule.uuid,\n    children: nest(rules.filter(r => r !== rule), rule.uuid)\n  }))\n\nfunction makeBlob(text) {\n  return new Blob([text], {type: \"text/json\"})\n}\n\nfunction makeReplacer(data) {\n  return function(key, value) {\n    if (key === \"parent\" && value)\n      return data.rules.filter(r => value === r.uuid)[0].name\n    return value\n    // return ([\"uuid\"].includes(key)) ? undefined : value\n  }\n}\n\nfunction download(blob, filename) {\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nexport const Form = () => {\n  const [state, setState] = useState({\n    domains: [],\n    rules: [],\n  })\n\n  const handleAddDomain = () => {\n    setState({\n      ...state,\n      domains: [{ uuid: uuidv4(), name: \"\", domains: [] }, ...state.domains]\n    })\n  }\n  const handleRemoveDomain = index => () => {\n    setState(state => ({\n      ...state,\n      domains: state.domains.filter((_, dIndex) => index !== dIndex )\n    }))\n  }\n\n  const handleObjectChange = (obj, event) => {\n    const key = event.target.name\n    return { ...obj, [key]: event.target.value}\n  }\n  const updateList = name => index => event => {\n    const newData = state[name].map((obj, idx) => {\n      if (idx !== index) return obj\n      return handleObjectChange(obj, event)\n    })\n    setState({ ...state, [name]: newData })\n  }\n  const handleChangeDomain = updateList(\"domains\")\n  const handleChangeRule = updateList(\"rules\")\n  const handleAddRule = () => {\n    setState({\n      ...state,\n      rules: [\n        {\n          uuid: uuidv4(),\n          name: \"\",\n          domains: [],\n          filters: [],\n          renames: [],\n          evaluator: \"\",\n          parent: null,\n        },\n        ...state.rules\n      ],\n    })\n  }\n  const handleRemoveRule = index => () => {\n    let uuid = state.rules.filter((_, _idx) => _idx === index)[0].uuid\n    setState({\n      ...state,\n      rules: state.rules.filter((rule, rIndex) => {\n        if (rule.parent === uuid)\n          rule.parent = \"\"\n        return index !== rIndex\n      }),\n    })\n  }\n\n  return (\n    <form>\n      <div>\n        <div className=\"navbar\">\n          <b>synthaser rule generator</b>\n          <div className=\"nav-buttons\">\n            <button\n              type=\"button\"\n              className=\"nav-button btn-save\"\n              onClick={() => {\n                let replacer = makeReplacer(state)\n                let text = JSON.stringify(state, replacer, 2)\n                let blob = makeBlob(text)\n                download(blob, 'synthaser_rules.json')\n              }}\n            >\n              Save rules\n            </button>\n            <input\n              type=\"file\"\n              name=\"file\"\n              id=\"rule-upload\"\n              onChange={e => {\n                let files = e.target.files\n                let file = files[0]\n                if (!file) return\n                let reader = new FileReader()\n                reader.readAsText(file)\n                reader.onload = function() {\n                  let data = JSON.parse(reader.result)\n                  setState(data)\n                }\n                reader.onerror = function() {\n                  console.log(reader.error)\n                }\n              }}\n            />\n            <label\n              className=\"nav-button btn-load\"\n              htmlFor=\"rule-upload\"\n            >Load rules</label>\n            <button\n              type=\"button\"\n              className=\"nav-button btn-clear\"\n              onClick={() => setState({ domains: [], rules: [] })}\n            >\n              Clear all fields\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Container\">\n        <div className=\"Pane\">\n          <h2>Domain types</h2>\n          <p>\n            Define domain classes (e.g. KS) and select the relevant CDD domain families.\n            Search suggestions are shown when at least 3 characters are typed in the box.\n          </p>\n          <DomainList\n            domains={state.domains}\n            handleAdd={handleAddDomain}\n            handleRemove={handleRemoveDomain}\n            handleChange={handleChangeDomain}\n          />\n        </div>\n        <div className=\"Pane\">\n          <h2>Classification rules</h2>\n          <p>\n            Define classification rules (e.g. PKS) by selecting required domains (e.g. KS, AT)\n            and their evaluation logic (e.g. 0 and 1).\n          </p>\n          <p>\n            You can specify specific domain families to use for certain domain types in <b>domain filters</b> (e.g. only\n            use the PKS_KS family from KS) as well as renaming rules in <b>rename domains</b>\n             (e.g. rename all ACP after A or C domains to T). You can also select parent rules\n            in the <b>parent rule</b> selector; the resulting hierarchy will be reflected in the\n            <b> Rule hierarchy</b> pane on the right hand side.\n          </p>\n          <p>\n            The <b>evaluation expression</b> of a rule is a logical expression which <em>synthaser</em> uses\n            to determine if a sequence contains the correct combination of domains to satisfy the rule.\n            For example, given <b>KS</b> and <b>AT</b> domains in the <b>Domain types</b> pane, I could\n            create a rule <b>PKS</b> which requires both domains by first selecting <b>KS</b> and <b>AT</b> in\n            the <b>Domains</b> field of the rule, then writing <b>0 and 1</b> as the evaluation expression.\n            The numbers refer to the index of each domain in the domains list, so this expression essentially\n            means 'KS and AT'.\n          </p>\n          <RuleList\n            rules={state.rules}\n            domains={state.domains}\n            handleAdd={handleAddRule}\n            handleRemove={handleRemoveRule}\n            handleChange={handleChangeRule}\n          />\n        </div>\n        <div className=\"Pane\">\n          <h2>Rule hierarchy</h2>\n          <p>\n            The hierarchy of classification rules, generated by the <b>parent rule</b> property\n            of each rule you create.\n            This determines the order in which rules will be evaluated inside\n            synthaser. For example, if we have three rules PKS, NRPS and HR-PKS, and we set\n            the parent rule of HR-PKS to PKS, synthaser will only evaluate HR-PKS if\n            PKS was satisfied.\n          </p>\n          <RuleTree rules={nest(state.rules)} />\n        </div>\n      </div>\n    </form>\n  )\n}\n","import { Form } from './components/Form'\nimport 'normalize.css'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}